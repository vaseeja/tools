#!/bin/bash

# busguardian related hacks/shortcuts which increase productivity

usage ()
{
    echo "Options available:"
    echo "  busgd nw"
    echo "  busgd serial"
    echo "  busgd flash"
    echo "  busgd build <target>"
}

# TODO (vaseeja) hardcoded IP address and device name
setup_network ()
{
   echo "bringing enp0s31f6 down"
   sudo ifconfig enp0s31f6 down
   echo "assigning IP address to enp0s31f6"
   sudo ip ad add 10.161.0.9/24 broadcast 10.161.0.255 dev enp0s31f6
   echo "bringing up enp0s31f6"
   sudo ifconfig enp0s31f6 up
   echo "check IP address"
   ifconfig enp0s31f6
   route -n
   sudo arping -c 3 -s 10.161.0.9 -I enp0s31f6 10.161.0.10
   echo "launching tcpdump"
   sudo tcpdump -i enp0s31f6
}

launch_minicom ()
{
   sudo killall minicom
   sudo minicom -b 115200 -D /dev/ttyUSB0 -C /tmp/mini_$(date +'%Y_%m_%d')
}

flash_busgd ()
{
  cd $TOP
  # bazel run //embedded/applications/bus_guardian/propulsion_control:propulsion_control_deploy_jlink
  local DSLINK=$(find ~/.cache/bazel/_bazel_lyft/ -name DSLite)
  local CFG_FILE=bazel/platforms/tms570ls3137/TMS570LS3137_JLink.ccxml
  local HEX_FILE=bazel-bin/embedded/applications/bus_guardian/$1_control/$1_control.hex
  sudo $DSLINK flash --config $CFG_FILE --verbose $HEX_FILE
}

build_bg ()
{
  cd $TOP
  ./avctl build //embedded/applications/bus_guardian/$1_control
}

BUSGD_NW=0
BUSGD_SERIAL=0
BUSGD_FLASH=0
BUSGD_BUILD=0
BUSGD_TARGET=""

export TOP=/home/lyft/src/avsoftware

for i in $@
do
case $i in
   nw)
   BUSGD_NW=1
   shift
   shift
   ;;
   serial)
   BUSGD_SERIAL=1
   shift
   shift
   ;;
   flash)
   BUSGD_FLASH=1
   BUSGD_TARGET=$2
   shift
   shift
   ;;
   build)
   BUSGD_BUILD=1
   BUSGD_TARGET=$2
   shift
   shift
   ;;
esac
done

if [[ $BUSGD_NW = 1 ]]; then
    setup_network
elif [[ $BUSGD_SERIAL = 1 ]]; then
    launch_minicom
elif [[ $BUSGD_FLASH = 1 ]]; then
    flash_busgd $BUSGD_TARGET
elif [[ $BUSGD_BUILD = 1 ]]; then
    build_bg $BUSGD_TARGET
else
    usage
fi
